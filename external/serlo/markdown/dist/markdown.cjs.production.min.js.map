{"version":3,"file":"markdown.cjs.production.min.js","sources":["../src/extensions/latex.js","../src/extensions/latex_output.js","../src/extensions/html_strip.js","../src/index.ts","../src/extensions/serlo_code_prepare.js","../src/extensions/injections.js","../src/extensions/table.js","../src/extensions/at_username.js","../src/extensions/strike_through.js","../src/extensions/spoiler.js","../src/extensions/spoiler_prepare.js","../src/extensions/serlo_code_output.js"],"sourcesContent":["/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\nvar _EncodeCode\nvar serloSpecificCharsToEscape\nvar latex = function () {\n  var filter\n\n  filter = function (text) {\n    // text = text.replace(/(^|[^\\\\])(%%)([^\\r]*?[^%])\\2(?!%)/gm,\n    text = text.replace(\n      /(^|[^\\\\])(%%)([^\\r]*?[^%])(%%?%)/gm,\n      function (wholeMatch, m1, m2, m3, m4) {\n        var c = m3\n        c = c.replace(/^([ \\t]*)/g, '') // leading whitespace\n        c = c.replace(/[ \\t]*$/g, '') // trailing whitespace\n        // Solves an issue where the formula would end with %%% and therefore the last %\n        // isn't added to c. However, this is a regex issue and should be solved there instead of here\n        if (m4 === '%%%') {\n          c += '% '\n        }\n        // Escape latex environment thingies\n        text = text.replace(/\\$/g, '\\\\$')\n        text = text.replace(/%/g, '\\\\%')\n\n        c = _EncodeCode(c)\n\n        return m1 + '<span class=\"mathInline\">%%' + c + '%%</span>'\n      }\n    )\n\n    text = text.replace(\n      /(^|[^\\\\])(¨D¨D)([^\\r]*?[^~])\\2(?!¨D)/gm,\n      function (wholeMatch, m1, m2, m3) {\n        var c = m3\n        c = c.replace(/^([ \\t]*)/g, '') // leading whitespace\n        c = c.replace(/[ \\t]*$/g, '') // trailing whitespace\n        c = _EncodeCode(c)\n        // Escape already transliterated $\n        // However, do not escape already escaped $s\n        text = text.replace(/[^\\\\]¨D/g, '\\\\¨D')\n        return m1 + '<span class=\"math\">¨D¨D' + c + '¨D¨D</span>'\n      }\n    )\n\n    return text\n  }\n\n  return [\n    {\n      type: 'lang',\n      filter: filter,\n    },\n  ]\n}\n\n// FROM shodown.js\n_EncodeCode = function (text) {\n  //\n  // Encode/escape certain characters inside Markdown code runs.\n  // The point is that in code, these characters are literals,\n  // and lose their special Markdown meanings.\n  //\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  // text = text.replace(/&/g, \"&amp;\");\n\n  // Do the angle bracket song and dance:\n  // text = text.replace(/</g, \"&lt;\");\n\n  text = escapeSerloSpecificCharacters(text)\n\n  return text\n}\n\nserloSpecificCharsToEscape = (function () {\n  var regexp = ''\n  var chars = ['*', '`', '_', '{', '}', '[', ']', '<', '\\\\']\n  var replacements = {}\n  var l = chars.length\n  var i = 0\n\n  for (; i < l; i++) {\n    regexp += '\\\\' + chars[i]\n    replacements[chars[i]] = '§LT' + i\n  }\n\n  regexp = new RegExp('([' + regexp + '])', 'gm')\n\n  function replace(match) {\n    return replacements[match] || match\n  }\n\n  return {\n    regexp: regexp,\n    replace: replace,\n  }\n})()\n\nfunction escapeSerloSpecificCharacters(text) {\n  return text.replace(\n    serloSpecificCharsToEscape.regexp,\n    serloSpecificCharsToEscape.replace\n  )\n}\n\nexport default latex\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\nvar serloSpecificCharsToEncode\nvar latexoutput = function () {\n  return [\n    {\n      type: 'output',\n      filter: function (text) {\n        return encodeSerloSpecificChars(text)\n      },\n    },\n  ]\n}\n\nserloSpecificCharsToEncode = (function () {\n  var regexp\n  var chars = ['*', '`', '_', '{', '}', '[', ']', '&lt;', '\\\\']\n  var replacements = {}\n  var l = chars.length\n  var i = 0\n\n  for (; i < l; i++) {\n    replacements['' + i] = chars[i]\n  }\n\n  regexp = new RegExp('§LT([0-9])', 'gm')\n\n  function replace(whole, match) {\n    return replacements[parseInt(match)] || match\n  }\n\n  return {\n    regexp: regexp,\n    replace: replace,\n  }\n})()\n\nfunction encodeSerloSpecificChars(text) {\n  return text.replace(\n    serloSpecificCharsToEncode.regexp,\n    serloSpecificCharsToEncode.replace\n  )\n}\n\nexport default latexoutput\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\nvar allowedTags =\n  'a|b|blockquote|code|del|dd|dl|dt|em|h1|h2|h3|h4|h5|h6|' +\n  'i|img|li|ol|p|pre|sup|sub|strong|strike|ul|br|hr|span|' +\n  'table|th|tr|td|tbody|thead|tfoot|div'\nvar allowedAttributes = {\n  img: 'src|width|height|alt',\n  a: 'href|name',\n  '*': 'title',\n  span: 'class',\n  table: 'class',\n  tr: 'rowspan',\n  td: 'colspan|align',\n  th: 'rowspan|align',\n  div: 'class',\n  b: 'class',\n  h1: 'id',\n  h2: 'id',\n  h3: 'id',\n  h4: 'id',\n  h5: 'id',\n  h6: 'id',\n}\nvar forceProtocol = false\nvar testAllowed = new RegExp('^(' + allowedTags.toLowerCase() + ')$')\nvar findTags = /<(\\/?)\\s*([\\w:-]+)([^>]*)>/g\nvar findAttribs = /(\\s*)([\\w:-]+)\\s*=\\s*(?:(?:([\"'])([^\\3]+?)(?:\\3))|([^\\s]+))/g\n\nvar htmlstrip = function () {\n  var filter\n\n  filter = function (text) {\n    return stripUnwantedHTML(text)\n  }\n\n  return [\n    {\n      type: 'output',\n      filter: filter,\n    },\n  ]\n}\n\nfunction stripUnwantedHTML(html) {\n  // convert all strings patterns into regexp objects (if not already converted)\n  for (var i in allowedAttributes) {\n    if (\n      allowedAttributes.hasOwnProperty(i) &&\n      typeof allowedAttributes[i] === 'string'\n    ) {\n      allowedAttributes[i] = new RegExp(\n        '^(' + allowedAttributes[i].toLowerCase() + ')$'\n      )\n    }\n  }\n\n  // find and match html tags\n  return html.replace(findTags, function (original, lslash, tag, params) {\n    var tagAttr\n    var wildcardAttr\n    var rslash = (params.substr(-1) === '/' && '/') || ''\n\n    tag = tag.toLowerCase()\n\n    // tag is not allowed, return empty string\n    if (!tag.match(testAllowed)) return ''\n    else {\n      // tag is allowed\n      // regexp objects for a particular tag\n      tagAttr = tag in allowedAttributes && allowedAttributes[tag]\n      wildcardAttr = '*' in allowedAttributes && allowedAttributes['*']\n\n      // if no attribs are allowed\n      if (!tagAttr && !wildcardAttr) return '<' + lslash + tag + rslash + '>'\n\n      // remove trailing slash if any\n      params = params.trim()\n      if (rslash) {\n        params = params.substr(0, params.length - 1)\n      }\n\n      // find and remove unwanted attributes\n      params = params.replace(\n        findAttribs,\n        function (original, space, name, quot, value) {\n          name = name.toLowerCase()\n\n          if (!value && !quot) {\n            value = ''\n            quot = '\"'\n          } else if (!value) {\n            value = quot\n            quot = '\"'\n          }\n\n          // force data: and javascript: links and images to #\n          if (\n            (name === 'href' || name === 'src') &&\n            (value.trim().substr(0, 'javascript:'.length) === 'javascript:' ||\n              value.trim().substr(0, 'data:'.length) === 'data:')\n          ) {\n            value = '#'\n          }\n\n          // scope links and sources to http protocol\n          if (\n            forceProtocol &&\n            (name === 'href' || name === 'src') &&\n            !/^[a-zA-Z]{3,5}:\\/\\//.test(value)\n          ) {\n            value = 'http://' + value\n          }\n\n          if (\n            (wildcardAttr && name.match(wildcardAttr)) ||\n            (tagAttr && name.match(tagAttr))\n          ) {\n            return space + name + '=' + quot + value + quot\n          } else return ''\n        }\n      )\n\n      return '<' + lslash + tag + (params ? ' ' + params : '') + rslash + '>'\n    }\n  })\n}\n\nexport default htmlstrip\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n// @ts-ignore\nimport Showdown from 'showdown'\n\n// @ts-ignore\nimport codePrepare from './extensions/serlo_code_prepare'\n// @ts-ignore\nimport injections from './extensions/injections'\n// @ts-ignore\nimport table from './extensions/table'\n// @ts-ignore\nimport htmlStrip from './extensions/html_strip'\n// @ts-ignore\nimport latex from './extensions/latex'\n// @ts-ignore\nimport atUsername from './extensions/at_username'\n// @ts-ignore\nimport strikeThrough from './extensions/strike_through'\n// @ts-ignore\nimport spoiler from './extensions/spoiler'\n// @ts-ignore\nimport spoilerPrepare from './extensions/spoiler_prepare'\n// @ts-ignore\nimport latexOutput from './extensions/latex_output'\n// @ts-ignore\nimport codeOutput from './extensions/serlo_code_output'\n\nexport const converter: {\n  makeHtml(source: string): string\n} = new Showdown.Converter({\n  extensions: [\n    codePrepare,\n    injections,\n    table,\n    htmlStrip,\n    latex,\n    atUsername,\n    strikeThrough,\n    spoiler,\n    spoilerPrepare,\n    latexOutput,\n    codeOutput,\n  ],\n})\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\n/* Prepares Github Style Code */\nvar codeprepare = function () {\n  return [\n    {\n      type: 'lang',\n      filter: (function () {\n        var replacements = {}\n        var replacementRegexp = ''\n        var codeRegexp = /(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/gm\n        var charsToDecode = ['~D', '%', '\\\\|', '/']\n        var i\n        var l\n\n        for (i = 0, l = charsToDecode.length; i < l; i++) {\n          // replacementRegexp += '\\\\' + charsToDecode[i];\n          // charsToDecode[i] = '\\\\' + charsToDecode[i];\n          replacements[charsToDecode[i].replace(/\\\\/g, '')] = '§SC' + i\n        }\n\n        // (~D|\\$|/|%)\n        // (~D|%|\\||\\/)/gm\n        replacementRegexp = new RegExp(\n          '(' + charsToDecode.join('|') + ')',\n          'gm'\n        )\n\n        function replace(whole, language, code) {\n          // escape all chars in code\n          code = code.replace(replacementRegexp, function (match) {\n            return replacements[match] || match\n          })\n\n          return '\\n```' + language + '\\n' + code + '\\n```'\n        }\n\n        return function (text) {\n          return text.replace(codeRegexp, replace)\n        }\n      })(),\n    },\n  ]\n}\n\nexport default codeprepare\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\n/**\n * Serlo Flavored Markdown\n * Injections:\n * Transforms >[Title](injectionUrl)\n * into <div class=\"injection\"><a href=\"injectionUrl\" class=\"injection-link\">Title</a></div>\n **/\nvar injections = function () {\n  var filter\n  var findInjections = new RegExp(/>\\[(.*)\\]\\((.*)\\)/g)\n\n  // Corrects relative urls with missing leading slash\n  function correctUrl(url) {\n    url = url.split('/')\n    // Url does start with http\n    if (url[0] === 'http:' || url[0] === 'https:') {\n      // is invalid for injections, but do nothing\n      return url.join('/')\n    }\n\n    // first item is empty, means there already is a leading slash\n    if (url[0] === '') {\n      url.shift()\n    }\n\n    // Url does not start with / or http\n    return '/' + url.join('/')\n  }\n\n  filter = function (text) {\n    return text.replace(findInjections, function (original, title, url) {\n      const href = correctUrl(url)\n\n      if (/assets\\.serlo\\.org\\/legacy\\/.*\\.xml/.test(href)) {\n        return `<div class=\"legacy-injection\">Legacy GeoGebra applets aren't supported anymore. Please upload the applet to GeoGebra instead.</div>`\n      }\n      if (/assets\\.serlo\\.org\\/legacy\\//.test(href)) {\n        return `<div>\n            <div class=\"injection\"><a href=\"${href}\" class=\"injection-link\">${title}</a></div>\n            <div class=\"legacy-injection\">Please don't use injections for images. Change <code>>[...](...)</code> to <code>![...](...)</code></div>\n          </div>`\n      }\n\n      return `<div class=\"injection\"><a href=\"${href}\" class=\"injection-link\">${title}</a></div>`\n    })\n  }\n\n  return [\n    {\n      type: 'lang',\n      filter: filter,\n    },\n  ]\n}\n\nexport default injections\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\n/*\n * Basic table support with re-entrant parsing, where cell content\n * can also specify markdown.\n *\n * Tables\n * ======\n *\n * | Col 1   | Col 2                                              |\n * |======== |====================================================|\n * |**bold** | ![Valid XHTML] (http://w3.org/Icons/valid-xhtml10) |\n * | Plain   | Value                                              |\n *\n */\nvar table = function () {\n  var tables = {}\n  var style = 'text-align:left;'\n  var filter\n  var callbackConverter\n\n  tables.th = function (header) {\n    return (\n      '<th style=\"' +\n      style +\n      '\">' +\n      callbackConverter.makeHtml(header) +\n      '</th>'\n    )\n  }\n  tables.td = function (cell) {\n    return (\n      '<td style=\"' + style + '\">' + callbackConverter.makeHtml(cell) + '</td>'\n    )\n  }\n  tables.ths = function () {\n    var out = ''\n    var i = 0\n    var hs = [].slice.apply(arguments)\n\n    for (i; i < hs.length; i += 1) {\n      out += tables.th(hs[i]) + '\\n'\n    }\n    return out\n  }\n  tables.tds = function () {\n    var out = ''\n    var i = 0\n    var ds = [].slice.apply(arguments)\n    for (i; i < ds.length; i += 1) {\n      out += tables.td(ds[i]) + '\\n'\n    }\n    return out\n  }\n  tables.thead = function () {\n    var out\n    var hs = [].slice.apply(arguments)\n    out = '<thead>\\n'\n    out += '<tr>\\n'\n    out += tables.ths.apply(this, hs)\n    out += '</tr>\\n'\n    out += '</thead>\\n'\n    return out\n  }\n  tables.tr = function () {\n    var out\n    var cs = [].slice.apply(arguments)\n    out = '<tr>\\n'\n    out += tables.tds.apply(this, cs)\n    out += '</tr>\\n'\n    return out\n  }\n  filter = function (text, converter) {\n    var i = 0\n    var lines = text.split('\\n')\n    var tbl = []\n    var line\n    var hs\n    var out = []\n    callbackConverter = converter\n\n    for (i; i < lines.length; i += 1) {\n      line = lines[i]\n      // looks like a table heading\n      if (line.trim().match(/^[|]{1}.*[|]{1}$/)) {\n        line = line.trim()\n        tbl.push('<div class=\"table-responsive\">')\n        tbl.push('<table class=\"table table-striped\">')\n        hs = line.substring(1, line.length - 1).split('|')\n        tbl.push(tables.thead.apply(this, hs))\n        line = lines[++i]\n        if (!line.trim().match(/^[|]{1}[-=| ]+[|]{1}$/)) {\n          // not a table rolling back\n          line = lines[--i]\n        } else {\n          line = lines[++i]\n          tbl.push('<tbody>')\n          while (line.trim().match(/^[|]{1}.*[|]{1}$/)) {\n            line = line.trim()\n            tbl.push(\n              tables.tr.apply(\n                this,\n                line.substring(1, line.length - 1).split('|')\n              )\n            )\n            line = lines[++i]\n          }\n          tbl.push('</tbody>')\n          tbl.push('</table>')\n          tbl.push('</div>')\n          // we are done with this table and we move along\n          out.push(tbl.join('\\n'))\n          tbl = []\n          continue\n        }\n      }\n      out.push(line)\n    }\n    return out.join('\\n')\n  }\n  return [\n    {\n      type: 'lang',\n      filter: filter,\n    },\n  ]\n}\n\nexport default table\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\nvar atusername = function () {\n  return [\n    // @username syntax\n    {\n      type: 'lang',\n      regex: '\\\\B(\\\\\\\\)?@([\\\\S]+)\\\\b',\n      replace: function (match, leadingSlash, username) {\n        // Check if we matched the leading \\ and return nothing changed if so\n        if (leadingSlash === '\\\\') {\n          return match\n        } else {\n          return (\n            '<a class=\"user-mention\" href=\"/user/profile/' +\n            username +\n            '\">@' +\n            username +\n            '</a>'\n          )\n        }\n      },\n    },\n\n    // Escaped @'s so we don't get into trouble\n    //\n    { type: 'lang', regex: '\\\\\\\\@', replace: '@' },\n  ]\n}\n\nexport default atusername\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\nvar strikethrough = function () {\n  return [\n    {\n      // strike-through\n      // NOTE: showdown already replaced \"~\" with \"~T\", so we need to adjust accordingly.\n      type: 'lang',\n      regex: '(~T){2}([^~]+)(~T){2}',\n      replace: function (match, prefix, content, suffix) {\n        return '<del>' + content + '</del>'\n      },\n    },\n  ]\n}\n\nexport default strikethrough\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\n/**\n * Serlo Flavored Markdown\n * Spoilers:\n * Transforms ///.../// blocks into spoilers\n **/\nvar spoiler = function () {\n  var filter\n  var findSpoilers = new RegExp(/^<p>=,sp. (.*)<\\/p>([\\s\\S]*?)<p>=,sp.<\\/p>/gm)\n\n  filter = function (text) {\n    return text.replace(findSpoilers, function (original, title, content) {\n      return (\n        '<div class=\"spoiler panel panel-default\"><div class=\"spoiler-teaser panel-heading\"><span class=\"fa fa-caret-square-o-down\"></span>' +\n        title +\n        '</div><div class=\"spoiler-content panel-body\">' +\n        content +\n        '</div></div>'\n      )\n    })\n  }\n\n  return [\n    {\n      type: 'output',\n      filter: filter,\n    },\n  ]\n}\n\nexport default spoiler\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\n/**\n * Serlo Flavored Markdown\n * Spoilers:\n * Transforms ///.../// blocks into spoilers\n **/\nvar spoilerprepare = function () {\n  var filter\n  var findSpoilers = new RegExp(/^\\/\\/\\/ (.*)\\n([\\s\\S]*?)(\\n|\\r)+\\/\\/\\//gm)\n\n  filter = function (text) {\n    // convert all \"///\"s into \"=,sp.\"s\n    return text.replace(findSpoilers, function (original, title, content) {\n      return '<p>=,sp. ' + title + '</p>\\n' + content + '<p>=,sp.</p>'\n    })\n  }\n\n  return [\n    {\n      type: 'lang',\n      filter: filter,\n    },\n  ]\n}\n\nexport default spoilerprepare\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n/* global define */\n/* Prepares Github Style Code */\nvar codeoutput = function () {\n  return [\n    {\n      type: 'lang',\n      filter: (function () {\n        var charsToEncode = ['~D', '%', '|', '/']\n        var replacements = {}\n        var regexp\n        var i\n        var l\n\n        for (i = 0, l = charsToEncode.length; i < l; i++) {\n          replacements['' + i] = charsToEncode[i]\n        }\n\n        regexp = new RegExp('§SC([0-9])', 'gm')\n\n        function replace(whole, match) {\n          return replacements[parseInt(match)] || match\n        }\n\n        return function (text) {\n          return text.replace(regexp, replace)\n        }\n      })(),\n    },\n  ]\n}\n\nexport default codeoutput\n"],"names":["_EncodeCode","serloSpecificCharsToEscape","serloSpecificCharsToEncode","allowedAttributes","img","a","span","table","tr","td","th","div","b","h1","h2","h3","h4","h5","h6","testAllowed","RegExp","toLowerCase","findTags","findAttribs","text","replace","regexp","escapeSerloSpecificCharacters","chars","replacements","l","length","i","match","whole","parseInt","Showdown","Converter","extensions","type","filter","replacementRegexp","codeRegexp","charsToDecode","language","code","join","findInjections","original","title","url","href","split","shift","correctUrl","test","callbackConverter","tables","style","header","makeHtml","cell","ths","out","hs","slice","apply","arguments","tds","ds","thead","this","cs","converter","line","lines","tbl","trim","push","substring","html","hasOwnProperty","lslash","tag","params","tagAttr","wildcardAttr","rslash","substr","space","name","quot","value","stripUnwantedHTML","wholeMatch","m1","m2","m3","m4","c","regex","leadingSlash","username","prefix","content","suffix","findSpoilers","encodeSerloSpecificChars","charsToEncode"],"mappings":"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"}