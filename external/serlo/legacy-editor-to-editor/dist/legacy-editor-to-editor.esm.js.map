{"version":3,"file":"legacy-editor-to-editor.esm.js","sources":["../src/splishToEdtr/types.ts","../src/legacyToSplish/markdownToHtml.ts","../src/legacyToSplish/markdownToSlate.ts","../src/legacyToSplish/createPlugin.ts","../src/legacyToSplish/normalizeMarkdown.ts","../src/legacyToSplish/split.ts","../src/legacyToSplish/transform.ts","../src/splishToEdtr/normalize-slate.ts","../src/splishToEdtr/convertSlate.tsx","../src/splishToEdtr/convertPlugins.ts","../src/splishToEdtr/index.ts","../src/index.ts"],"sourcesContent":["/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nexport enum Plugin {\n  AlphabetSort = '@serlo-org/alphabet-sort',\n  Anchor = '@serlo-org/anchor',\n  Blockquote = '@serlo-org/blockquote',\n  Equations = '@serlo-org/equations',\n  Geogebra = '@serlo-org/geogebra',\n  H5p = '@serlo-org/h5p',\n  Highlight = '@serlo-org/highlight',\n  Hint = '@serlo-org/hint',\n  Image = '@splish-me/image',\n  Injection = '@serlo-org/injection',\n  InputExercise = '@serlo-org/input-exercise',\n  License = '@serlo-org/license',\n  MatchingExercise = '@serlo-org/matching-exercise',\n  ScMcExercise = '@serlo-org/sc-mc-exercise',\n  Solution = '@serlo-org/solution',\n  Spoiler = '@serlo-org/spoiler',\n  StepByStep = '@serlo-org/step-by-step',\n  Table = '@serlo-org/table',\n  Text = '@splish-me/slate',\n}\nexport type Legacy = LegacyRow[] | string\n\nexport type LegacyRow = {\n  col: number\n  content: string\n}[]\n\nexport type Splish = {\n  id?: string\n  cells: Cell[]\n}\nexport type Row = Splish\n\nexport type Cell = RowCell | ContentCell\n\ntype RowCell = {\n  id?: string\n  size?: number\n  rows: Row[]\n}\n\nexport type ContentCell<S = unknown> = {\n  id?: string\n  size?: number\n  inline?: null\n  content: {\n    plugin: SplishPlugin\n    state: S\n  }\n}\n\nexport function isContentCell(cell: Cell): cell is ContentCell {\n  const c = cell as ContentCell\n  return typeof c.content !== 'undefined'\n}\n\ntype SplishPlugin = { name: Plugin | 'code'; version?: string }\n\nexport type Edtr = RowsPlugin | LayoutPlugin | OtherPlugin\n\nexport type RowsPlugin = { plugin: 'rows'; state: Edtr[] }\nexport type LayoutPlugin = {\n  plugin: 'layout'\n  state: { child: Edtr; width: number }[]\n}\n\nexport type OtherPlugin = {\n  plugin:\n    | 'anchor'\n    | 'article'\n    | 'blockquote'\n    | 'error'\n    | 'exercise'\n    | 'geogebra'\n    | 'highlight'\n    | 'image'\n    | 'important'\n    | 'injection'\n    | 'inputExercise'\n    | 'spoiler'\n    | 'scMcExercise'\n    | 'solution'\n    | 'table'\n    | 'text'\n    | 'video'\n  state: unknown\n}\n\nexport function isSplish(content: Legacy | Splish): content is Splish {\n  return (content as Splish).cells !== undefined\n}\n\nexport function isEdtr(content: Legacy | Splish | Edtr): content is Edtr {\n  return (content as Edtr).plugin !== undefined\n}\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport { converter } from '@serlo/markdown'\n\nconst renderMarkdown = (input: string) => {\n  let html = converter.makeHtml(input)\n  html = html.replace(/\"/gm, '\"')\n  return html\n    .replace(\n      /<span class=\"mathInline\">%%(.*?)%%<\\/span>/gm,\n      '<katexinline>$1</katexinline>'\n    )\n    .replace(\n      /<span class=\"math\">\\$\\$(.*?)\\$\\$<\\/span>/gm,\n      '<katexblock>$1</katexblock>'\n    )\n    .replace(/\\r?\\n/gm, '')\n}\nexport default renderMarkdown\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport { ContentCell, Plugin } from '../splishToEdtr/types'\nimport { SplishTextState } from './createPlugin'\nimport renderMarkdown from './markdownToHtml'\n\nconst markdownToSlate = (markdown: string): ContentCell<SplishTextState> => ({\n  content: {\n    plugin: { name: Plugin.Text, version: '0.0.0' },\n    state: {\n      importFromHtml: renderMarkdown(markdown),\n    },\n  },\n})\nexport default markdownToSlate\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport { v4 } from 'uuid'\n\nimport markdownToSlate from './markdownToSlate'\nimport { Element, LinkedImagesTMP, NormalizedObject } from './normalizeMarkdown'\nimport { ValueJSON } from 'slate'\nimport { ContentCell, Splish, Plugin } from '../splishToEdtr/types'\n\nconst createPlugins = ({ normalized, elements }: NormalizedObject) => {\n  const split = normalized\n    .split(/(ยง\\d+ยง)/)\n    .map((s) => s.trim())\n    .filter((s) => s !== '')\n\n  if (!split.length) {\n    return [\n      {\n        cells: [markdownToSlate('')],\n      },\n    ]\n  }\n  return split.map((markdown) => {\n    const elementIDMatch = /ยง(\\d+)ยง/.exec(markdown)\n    if (elementIDMatch !== null) {\n      // explicitly cast the matched number for typescript\n      const i = parseInt(elementIDMatch[1])\n      return {\n        cells: [createPluginCell(elements[i])],\n      }\n    } else {\n      return {\n        cells: [markdownToSlate(markdown)],\n      }\n    }\n  })\n}\nconst createPluginCell = (elem: Element): ContentCell<SplishPluginState> => {\n  switch (elem.name) {\n    case 'table':\n      return {\n        content: {\n          plugin: {\n            name: Plugin.Table,\n            version: '0.0.0',\n          },\n          state: {\n            src: elem.src,\n          },\n        },\n      }\n    case 'spoiler':\n      return {\n        content: {\n          plugin: {\n            name: Plugin.Spoiler,\n            version: '0.0.0',\n          },\n          state: {\n            title: elem.title,\n            content: {\n              type: '@splish-me/editor-core/editable',\n              state: {\n                id: v4(),\n                cells: [\n                  {\n                    id: v4(),\n                    rows: createPlugins(elem.content),\n                  },\n                ],\n              },\n            },\n          },\n        },\n      }\n    case 'blockquote':\n      return {\n        content: {\n          plugin: {\n            name: Plugin.Blockquote,\n            version: '0.0.0',\n          },\n          state: {\n            child: {\n              type: '@splish-me/editor-core/editable',\n              state: {\n                id: v4(),\n                cells: [\n                  {\n                    id: v4(),\n                    rows: createPlugins(elem.content),\n                  },\n                ],\n              },\n            },\n          },\n        },\n      }\n    case 'injection':\n      return {\n        content: {\n          plugin: {\n            name: Plugin.Injection,\n            version: '0.0.0',\n          },\n          state: {\n            description: elem.description,\n            src: elem.src,\n          },\n        },\n      }\n    case 'geogebra':\n      return {\n        content: {\n          plugin: {\n            name: Plugin.Geogebra,\n            version: '0.0.0',\n          },\n          state: {\n            description: elem.description,\n            src: elem.src,\n          },\n        },\n      }\n    case 'image':\n      return {\n        content: {\n          plugin: {\n            name: Plugin.Image,\n            version: '0.0.0',\n          },\n          state: {\n            description: elem.description,\n            title: elem.title,\n            src: elem.src,\n            href: (elem as LinkedImagesTMP).href\n              ? (elem as LinkedImagesTMP).href\n              : undefined,\n          },\n        },\n      }\n    case 'code':\n      return {\n        content: {\n          plugin: {\n            name: 'code',\n          },\n          state: {\n            language: elem.language,\n            src: elem.src,\n          },\n        },\n      }\n  }\n}\n\ninterface SplishDocumentIdentifier {\n  type: '@splish-me/editor-core/editable'\n  state: Splish\n}\n\nexport interface SplishCodeState {\n  language: string\n  src: string\n}\nexport interface SplishSpoilerState {\n  title: string\n  content: SplishDocumentIdentifier\n}\n\nexport interface SplishTableState {\n  src: string\n}\n\nexport interface SplishBlockquoteState {\n  child: SplishDocumentIdentifier\n}\n\nexport interface SplishInjectionState {\n  description: string\n  src: string\n}\n\nexport interface SplishGeogebraState {\n  description: string\n  src: string\n}\n\nexport interface SplishImageState {\n  description: string\n  src: string\n  title: string\n  href?: string\n}\n\nexport interface SplishTextState {\n  importFromHtml?: string\n  editorState?: ValueJSON\n}\n\nexport type SplishPluginState =\n  | SplishCodeState\n  | SplishSpoilerState\n  | SplishTableState\n  | SplishBlockquoteState\n  | SplishInjectionState\n  | SplishGeogebraState\n  | SplishImageState\n  | SplishTextState\n\nexport default createPlugins\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\n\nconst codeRegEx = new RegExp(/(\\A|\\n)```(\\S*)\\n([\\s\\S]*?)\\r?\\n?```/m)\nconst spoilerRegEx = new RegExp(/^\\/\\/\\/ (.*)\\n([\\s\\S]*?)(\\n|\\r)+\\/\\/\\//m)\nconst injectionRegEx = new RegExp(/>\\[(.*)\\]\\(((?!ggt\\/).*)\\)/)\nconst geogebraInjectionRegEx = new RegExp(/>\\[(.*)\\]\\(ggt\\/(.*)\\)/)\nconst linkRegEx = new RegExp(\n  /[^!>]\\[(([^[()\\]]*?(\\[.*?\\]\\(.*?\\))?)*?)\\]\\((.*?)\\)/\n)\nconst imagesRegEx = new RegExp(/!\\[(.*?)\\]\\((.*?)( \"(.*)?\")?\\)/)\nconst linkedImagesRegEx = new RegExp(\n  /\\[!\\[(.*?)\\]\\((.*?)( \"(.*)?\")?\\)\\]\\((.*?)\\)/\n)\nconst tableRegEx = new RegExp(/(^|\\n)(((\\|[^|\\r\\n]*)+\\|( |\\t)*(\\r?\\n|\\r)?)+)/)\n\n/**\n * Blockquote RegEx:\n *  1. Negative Lookahead: Ignore when start is injection not blockquote;\n *  2. match /> ?[\\s\\S]+?\n *  3. Lookahead: Match is finished, when two linebreaks, end of line or injection\n */\nconst blockquoteRegEx = new RegExp(\n  /((((\\A|\\n+)(?!>\\[.*?\\]\\(.*?\\))>[\\s\\S]+?)(?=(\\r?\\n\\r?\\n\\w)|$|(>\\[.*?\\]\\(.*?\\))))+)/m\n)\n\nconst extractCode = (normalizedObj: NormalizedObject) =>\n  extract(\n    codeRegEx,\n    (match) => ({\n      name: 'code',\n      language: match[2].trim(),\n      src: match[3],\n    }),\n    normalizedObj\n  )\nconst extractSpoilers = (normalizedObj: NormalizedObject) =>\n  extract(\n    spoilerRegEx,\n    (match) => ({\n      name: 'spoiler',\n      title: match[1],\n      content: normalizeMarkdown(match[2]),\n    }),\n    normalizedObj\n  )\n\nconst extractTable = (normalizedObj: NormalizedObject) =>\n  extract(\n    tableRegEx,\n    (match) => ({\n      name: 'table',\n      src: match[0],\n    }),\n    normalizedObj\n  )\n\nconst extractInjections = (normalizedObj: NormalizedObject) =>\n  extract(\n    injectionRegEx,\n    (match) => ({\n      name: 'injection',\n      description: match[1],\n      src: match[2],\n    }),\n    normalizedObj\n  )\n\nconst extractGeogebra = (normalizedObj: NormalizedObject) =>\n  extract(\n    geogebraInjectionRegEx,\n    (match) => ({\n      name: 'geogebra',\n      description: match[1],\n      src: match[2],\n    }),\n    normalizedObj\n  )\n\nconst extractLinkedImages = (normalizedObj: NormalizedObject) =>\n  extract(\n    linkedImagesRegEx,\n    (match) => ({\n      name: 'image',\n      description: match[1],\n      src: match[2],\n      title: match[4],\n      href: match[5],\n    }),\n    normalizedObj\n  )\n\nconst extractImages = (normalizedObj: NormalizedObject) =>\n  extract(\n    imagesRegEx,\n    (match) => ({\n      name: 'image',\n      description: match[1],\n      src: match[2],\n      title: match[4],\n    }),\n    normalizedObj\n  )\n\nconst extractBlockquote = (normalizedObj: NormalizedObject) =>\n  extract(\n    blockquoteRegEx,\n    (match) => ({\n      name: 'blockquote',\n      content: normalizeMarkdown(match[1].replace(/(^|\\n)>/g, '$1')),\n    }),\n    normalizedObj\n  )\n\nconst normalizeMarkdown = (markdown: string) => {\n  let normalizedObj: NormalizedObject = {\n    normalized: markdown,\n    elements: [],\n  }\n  normalizedObj = extractCode(normalizedObj)\n  normalizedObj = extractSpoilers(normalizedObj)\n  normalizedObj = extractTable(normalizedObj)\n  normalizedObj = extractBlockquote(normalizedObj)\n  normalizedObj = extractInjections(normalizedObj)\n  normalizedObj = extractGeogebra(normalizedObj)\n  normalizedObj = extractLinkedImages(normalizedObj)\n  normalizedObj = extractImages(normalizedObj)\n\n  return normalizedObj\n}\n\nconst extract = (\n  regex: RegExp,\n  createElement: (match: RegExpExecArray) => Element,\n  { normalized, elements }: NormalizedObject\n) => {\n  let match = regex.exec(normalized)\n  while (match !== null) {\n    normalized = normalized.replace(regex, 'ยง' + elements.length + 'ยง')\n    elements = [...elements, createElement(match)]\n\n    match = regex.exec(normalized)\n  }\n  return {\n    normalized: normalized,\n    elements: elements,\n  }\n}\n\nexport interface NormalizedObject {\n  normalized: string\n  elements: Element[]\n}\n\ninterface CodeTMP {\n  name: 'code'\n  language: string\n  src: string\n}\n\ninterface SpoilerTMP {\n  name: 'spoiler'\n  title: string\n  content: ReturnType<typeof normalizeMarkdown>\n}\ninterface TableTMP {\n  name: 'table'\n  src: string\n}\ninterface BlockquoteTMP {\n  name: 'blockquote'\n  content: ReturnType<typeof normalizeMarkdown>\n}\n\ninterface InjectionsTMP {\n  name: 'injection'\n  description: string\n  src: string\n}\ninterface GeogebraTMP {\n  name: 'geogebra'\n  description: string\n  src: string\n}\ninterface ImagesTMP {\n  name: 'image'\n  description: string\n  src: string\n  title?: string\n}\nexport interface LinkedImagesTMP extends ImagesTMP {\n  href: string\n}\n\nexport type Element =\n  | CodeTMP\n  | SpoilerTMP\n  | TableTMP\n  | BlockquoteTMP\n  | InjectionsTMP\n  | GeogebraTMP\n  | LinkedImagesTMP\n  | ImagesTMP\n\nexport default normalizeMarkdown\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport { Cell } from '../splishToEdtr/types'\nimport createPlugins from './createPlugin'\nimport normalizeMarkdown from './normalizeMarkdown'\nimport transform from './transform'\n\nconst splitMarkdown = (markdown: string) =>\n  createPlugins(normalizeMarkdown(markdown))\n\ntype Leaf = { size: number; raw: string }\ntype CellBeforeSplit = Leaf | { rows: RowBeforeSplit[] }\ntype RowBeforeSplit = { cells: CellBeforeSplit[] }\n\nfunction isLeaf(cell: CellBeforeSplit): cell is Leaf {\n  const c = cell as Leaf\n  return typeof c.raw !== 'undefined'\n}\nfunction splitCell(cell: CellBeforeSplit): Cell {\n  if (isLeaf(cell)) {\n    return {\n      size: cell.size,\n      rows: splitMarkdown(cell.raw),\n    }\n  } else {\n    const { rows = [] } = cell\n    return {\n      ...cell,\n      rows: rows.map(splitRow),\n    }\n  }\n}\n\nfunction splitRow(row: RowBeforeSplit) {\n  return {\n    ...row,\n    cells: row.cells.map(splitCell),\n  }\n}\n\nfunction split(input: ReturnType<typeof transform>) {\n  return {\n    ...input,\n    cells: input.cells.map(splitCell),\n  }\n}\n\nexport default split\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport { Legacy, LegacyRow } from '../splishToEdtr/types'\n\nconst getCellsFromRow = (row: LegacyRow) =>\n  row.map((cell) => ({\n    size: Math.floor(cell.col / 2),\n    raw: cell.content,\n  }))\n\nconst transform = (input: Legacy) => {\n  if (typeof input === 'string') {\n    return {\n      cells: [\n        {\n          rows: [\n            {\n              cells: [\n                {\n                  size: 12,\n                  raw: input,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    }\n  }\n\n  return {\n    cells: [\n      {\n        rows: input.map((row) => ({\n          cells: getCellsFromRow(row),\n        })),\n      },\n    ],\n  }\n}\n\nexport default transform\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport * as R from 'ramda'\nimport {\n  BlockJSON,\n  NodeJSON,\n  ValueJSON,\n  DocumentJSON,\n  InlineJSON,\n  TextJSON,\n} from 'slate'\n\nexport function normalize(value: ValueJSON): ValueJSON {\n  return {\n    ...value,\n    document: value.document ? normalizeNode(value.document)[0] : undefined,\n  }\n}\n\nfunction normalizeNode<A extends NodeJSON>(node: A): A[] {\n  if (isBlock(node)) {\n    if (node?.nodes?.some(isInline) && node?.nodes?.some(isBlock)) {\n      // @ts-ignore\n      return R.chain(normalizeNode, unwrapChildBlocks(node))\n    } else {\n      return [{ ...node, nodes: R.chain(normalizeNode, node.nodes ?? []) }]\n    }\n  } else if (isDocument(node)) {\n    return [{ ...node, nodes: R.chain(normalizeNode, node.nodes ?? []) }]\n  } else {\n    return [node]\n  }\n}\n\nexport function unwrapChildBlocks(node: BlockJSON): BlockJSON[] {\n  if (node.nodes === undefined) return [node]\n\n  const result: BlockJSON[] = []\n  let nodesToInspect = node.nodes\n\n  while (nodesToInspect.length > 0) {\n    const [inlineNodes, tailNodes] = R.splitWhen(isBlock, nodesToInspect)\n\n    if (inlineNodes.length > 0) result.push({ ...node, nodes: inlineNodes })\n    if (tailNodes.length > 0) result.push(tailNodes[0] as BlockJSON)\n\n    nodesToInspect = tailNodes.slice(1)\n  }\n\n  return result\n}\n\nfunction isBlock(node: NodeJSON): node is BlockJSON {\n  return node?.object === 'block'\n}\n\nfunction isDocument(node: NodeJSON): node is DocumentJSON {\n  return node?.object === 'document'\n}\n\nfunction isInline(node: NodeJSON): node is InlineJSON | TextJSON {\n  return node?.object === 'inline' || node?.object === 'text'\n}\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport * as React from 'react'\nimport Html, { Rule } from 'slate-html-serializer'\n// @ts-ignore\nimport { parseFragment } from 'parse5'\nimport { Block, Inline, Mark, Value, ValueJSON } from 'slate'\nimport { normalize } from './normalize-slate'\n\n/**\n * This file provides a serializer for the splish slate state to html\n * and a deserializer for html to edtr-io slate state.\n * All serializers use the node names of the splish editor.\n * All deserializers use the new node names defined in the following variables.\n */\n\nexport const createHeadingNode = (level: number) => `@splish-me/h${level}`\nexport const linkNode = '@splish-me/a'\n\nexport const orderedListNode = 'ordered-list'\nexport const unorderedListNode = 'unordered-list'\nexport const listItemNode = 'list-item'\nexport const listItemChildNode = 'list-item-child'\n\nexport const paragraphNode = 'paragraph'\n\nexport const strongMark = '@splish-me/strong'\nexport const emphasizeMark = '@splish-me/em'\n\nexport const katexBlockNode = '@splish-me/katex-block'\nexport const katexInlineNode = '@splish-me/katex-inline'\n\nexport function convertOldSlate(value: ValueJSON) {\n  const serializer = new Html({\n    rules: [\n      headingSerializer,\n      linkSerializer,\n      listSerializer,\n      paragraphSerializer,\n      richTextSerializer,\n      katexSerializer,\n    ],\n    defaultBlock: { type: paragraphNode },\n    parseHtml: (html: string) => {\n      return parseFragment(html) as HTMLElement\n    },\n  })\n\n  return htmlToSlate(\n    serializer.serialize(Value.fromJSON(value), {\n      render: true,\n    })\n  )\n}\nexport function htmlToSlate(html: string) {\n  const deserializer = new Html({\n    rules: [\n      headingDeserializer,\n      linkDeserializer,\n      listDeserializer,\n      paragraphDeserializer,\n      richTextDeserializer,\n      katexDeserializer,\n      {\n        deserialize(el) {\n          if (el.tagName && el.tagName.toLowerCase() === 'br') {\n            return {\n              object: 'text',\n              text: '\\n',\n            }\n          }\n\n          if (el.nodeName === '#text') {\n            // @ts-ignore\n            if (el.value && el.value.match(/<!--.*?-->/)) return\n\n            return {\n              object: 'text',\n              // @ts-ignore\n              text: el.value,\n            }\n          }\n        },\n      },\n    ],\n    defaultBlock: { type: paragraphNode },\n    parseHtml: (html: string) => {\n      return parseFragment(html) as HTMLElement\n    },\n  })\n\n  return normalize(deserializer.deserialize(html, { toJSON: true }))\n}\n\ntype HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6\n\nconst headingDeserializer: Rule = {\n  deserialize(el, next) {\n    const match = el.tagName.toLowerCase().match(/h([1-6])/)\n\n    if (match) {\n      const level = parseInt(match[1], 10) as HeadingLevel\n\n      return {\n        object: 'block',\n        type: createHeadingNode(level),\n        nodes: next(el.childNodes),\n      }\n    }\n  },\n}\n\nconst linkDeserializer: Rule = {\n  deserialize(el, next) {\n    if (el.tagName.toLowerCase() === 'a') {\n      // @ts-ignore FIXME\n      const attr = el.attrs.find(({ name }) => name === 'href')\n\n      return {\n        object: 'inline',\n        type: linkNode,\n        nodes: next(el.childNodes),\n        data: {\n          href: attr ? attr.value : '',\n        },\n      }\n    }\n  },\n}\n\nconst listDeserializer: Rule = {\n  deserialize(el, next) {\n    switch (el.tagName.toLowerCase()) {\n      case 'ol':\n        return {\n          object: 'block',\n          type: orderedListNode,\n          nodes: next(el.childNodes),\n        }\n      case 'ul':\n        return {\n          object: 'block',\n          type: unorderedListNode,\n          nodes: next(el.childNodes),\n        }\n      case 'li':\n        return {\n          object: 'block',\n          type: listItemNode,\n          nodes: [\n            {\n              object: 'block',\n              type: listItemChildNode,\n              nodes: next(el.childNodes),\n            },\n          ],\n        }\n    }\n  },\n}\n\nconst paragraphDeserializer: Rule = {\n  deserialize(el, next) {\n    if (el.tagName.toLowerCase() === 'p') {\n      return {\n        object: 'block',\n        type: paragraphNode,\n        nodes: next(el.childNodes),\n      }\n    }\n  },\n}\n\nconst richTextDeserializer: Rule = {\n  deserialize(el, next) {\n    switch (el.tagName.toLowerCase()) {\n      case 'strong':\n      case 'b':\n        return {\n          object: 'mark',\n          type: strongMark,\n          nodes: next(el.childNodes),\n        }\n      case 'em':\n      case 'i':\n        return {\n          object: 'mark',\n          type: emphasizeMark,\n          nodes: next(el.childNodes),\n        }\n    }\n  },\n}\n\nconst katexDeserializer: Rule = {\n  deserialize(el, next) {\n    switch (el.tagName.toLowerCase()) {\n      case 'katexblock':\n        return {\n          object: 'block',\n          type: katexBlockNode,\n          data: {\n            //@ts-ignore\n            formula: el.childNodes[0].value,\n            inline: false,\n          },\n          nodes: next(el.childNodes),\n        }\n      case 'katexinline':\n        return {\n          object: 'inline',\n          type: katexInlineNode,\n          data: {\n            //@ts-ignore\n            formula: el.childNodes[0].value,\n            inline: true,\n          },\n          nodes: next(el.childNodes),\n        }\n      default:\n        return\n    }\n  },\n}\n\nconst headingSerializer: Rule = {\n  serialize(obj, children) {\n    const block = obj as Block\n\n    if (block.object === 'block') {\n      const match = block.type.match(/@splish-me\\/h([1-6])/)\n\n      if (match) {\n        const level = parseInt(match[1], 10) as HeadingLevel\n\n        return React.createElement(\n          `h${level}`,\n          {\n            node: obj,\n          },\n          children\n        )\n      }\n    }\n  },\n}\n\nconst linkSerializer: Rule = {\n  serialize(obj, children) {\n    const block = obj as Inline\n\n    if (block.object === 'inline' && block.type === linkNode) {\n      const href = obj.data.get('href')\n      return <a href={href}>{children}</a>\n    }\n  },\n}\n\nconst listSerializer: Rule = {\n  serialize(obj, children) {\n    const block = obj as Block\n\n    switch (block.type) {\n      case '@splish-me/ul':\n        return <ul>{children}</ul>\n      case '@splish-me/ol':\n        return <ol>{children}</ol>\n      case '@splish-me/li':\n        return <li>{children}</li>\n    }\n  },\n}\nconst paragraphSerializer: Rule = {\n  serialize(obj, children) {\n    const block = obj as Block\n    if (block.type === 'paragraph' || block.type === '@splish-me/p') {\n      return <p>{children}</p>\n    }\n  },\n}\n\nconst richTextSerializer: Rule = {\n  serialize(obj, children) {\n    const mark = obj as Mark\n    if (mark.object === 'mark') {\n      switch (mark.type) {\n        case '@splish-me/strong':\n          return <strong>{children}</strong>\n        case '@splish-me/em':\n          return <em>{children}</em>\n      }\n    }\n  },\n}\n\nconst katexSerializer: Rule = {\n  serialize(obj, children) {\n    const block = obj as Block\n    const inline = obj as Inline\n\n    if (block.object === 'block' && block.type === katexBlockNode) {\n      const formula = obj.data.get('formula')\n      // @ts-ignore\n      return <katexblock>{formula}</katexblock>\n    } else if (inline.object === 'inline' && inline.type === katexInlineNode) {\n      const formula = obj.data.get('formula')\n      // @ts-ignore\n      return <katexinline>{formula}</katexinline>\n    }\n  },\n}\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport { serializer } from '@edtr-io/plugin-text'\nimport {\n  SplishBlockquoteState,\n  SplishCodeState,\n  SplishGeogebraState,\n  SplishImageState,\n  SplishInjectionState,\n  SplishSpoilerState,\n  SplishTableState,\n  SplishTextState,\n} from '../legacyToSplish/createPlugin'\nimport { convertOldSlate, htmlToSlate } from './convertSlate'\nimport { ContentCell, OtherPlugin, Plugin } from './types'\nimport { convertSplishToEdtrIO } from '..'\n\nexport function convertPlugin(cell: ContentCell): OtherPlugin {\n  const { plugin, state } = cell.content\n  switch (plugin.name) {\n    case Plugin.Blockquote:\n      const blockquoteState = state as SplishBlockquoteState\n      return {\n        plugin: 'important',\n        state: convertSplishToEdtrIO(blockquoteState.child.state),\n      }\n    case Plugin.Image:\n      const imageState = state as SplishImageState\n      return {\n        plugin: 'image',\n        state: {\n          alt: imageState.description,\n          link: imageState.href\n            ? {\n                href: imageState.href,\n                openInNewTab: false,\n              }\n            : undefined,\n          src: imageState.src,\n          maxWidth: undefined,\n        },\n      }\n    case Plugin.Injection:\n      const injectionState = state as SplishInjectionState\n      return {\n        plugin: 'injection',\n        state: injectionState.src,\n      }\n    case Plugin.Spoiler:\n      const spoilerState = state as SplishSpoilerState\n      return {\n        plugin: 'spoiler',\n        state: {\n          title: spoilerState.title,\n          content: convertSplishToEdtrIO(spoilerState.content.state),\n        },\n      }\n    case Plugin.Text:\n      const textState = state as SplishTextState\n      if (textState.editorState) {\n        return {\n          plugin: 'text',\n          state: serializer.serialize(convertOldSlate(textState.editorState)),\n        }\n      } else {\n        return {\n          plugin: 'text',\n          state: serializer.serialize(\n            htmlToSlate(textState.importFromHtml || '')\n          ),\n        }\n      }\n    case Plugin.Table:\n      const tableState = state as SplishTableState\n      return {\n        plugin: 'table',\n        state: tableState.src,\n      }\n    case Plugin.Geogebra:\n      const geogebraState = state as SplishGeogebraState\n      return {\n        plugin: 'geogebra',\n        state: geogebraState.src,\n      }\n    case 'code':\n      const code = state as SplishCodeState\n      return {\n        plugin: 'highlight',\n        state: {\n          language: code.language,\n          code: code.src,\n          showLineNumbers: false,\n        },\n      }\n    default:\n      return {\n        plugin: 'error',\n        state: {\n          plugin: plugin.name,\n          state: state,\n        },\n      }\n  }\n}\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport * as R from 'ramda'\n\nimport { Cell, isContentCell, LayoutPlugin, OtherPlugin, Row } from './types'\nimport { convertPlugin } from './convertPlugins'\n\nexport {\n  Plugin,\n  OtherPlugin,\n  LayoutPlugin,\n  RowsPlugin,\n  Edtr,\n  Legacy,\n  Splish,\n  isSplish,\n  isEdtr,\n} from './types'\n\nexport function convertRow(row: Row): (LayoutPlugin | OtherPlugin)[] {\n  // no cells, then end the recursion\n  if (!row.cells.length) return []\n\n  // if more than one cell, than convert to special plugin 'layout'\n  if (row.cells.length > 1) {\n    return [\n      {\n        plugin: 'layout',\n        state: row.cells.map((cell): LayoutPlugin['state'][0] => {\n          return {\n            width: cell.size || 12,\n            child: {\n              plugin: 'rows',\n              state: convertCell(cell),\n            },\n          }\n        }),\n      },\n    ]\n  }\n\n  // otherwise continue with converting the only cell\n  return convertCell(row.cells[0])\n}\n\nfunction convertCell(cell: Cell): (LayoutPlugin | OtherPlugin)[] {\n  if (isContentCell(cell)) {\n    return [convertPlugin(cell)]\n  } else {\n    return R.reduce(\n      (plugins, row) => R.concat(plugins, convertRow(row)),\n      [] as (LayoutPlugin | OtherPlugin)[],\n      cell.rows\n    )\n  }\n}\n","/**\n * This file is part of Serlo.org.\n *\n * Copyright (c) 2013-2021 Serlo Education e.V.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @copyright Copyright (c) 2013-2021 Serlo Education e.V.\n * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0\n * @link      https://github.com/serlo-org/serlo.org for the canonical source repository\n */\nimport split from './legacyToSplish/split'\nimport transform from './legacyToSplish/transform'\nimport {\n  Legacy,\n  Splish,\n  RowsPlugin,\n  isSplish,\n  convertRow,\n} from './splishToEdtr'\n\nexport function convert(content: Legacy | Splish): RowsPlugin {\n  if (!content) return { plugin: 'rows', state: [] }\n  const splish = isSplish(content)\n    ? content\n    : convertLegacyToSplish(content, '')\n  return convertSplishToEdtrIO(splish)\n}\n\nexport function convertLegacyToSplish(content: Legacy, id: string): Splish {\n  const cells = split(transform(content))\n  return {\n    ...cells,\n    id,\n  }\n}\n\nexport function convertSplishToEdtrIO(content: Splish): RowsPlugin {\n  return {\n    plugin: 'rows',\n    state: convertRow(content),\n  }\n}\n\nexport {\n  OtherPlugin,\n  LayoutPlugin,\n  RowsPlugin,\n  Edtr,\n  Legacy,\n  Splish,\n  isSplish,\n  isEdtr,\n} from './splishToEdtr'\n"],"names":["Plugin","isContentCell","cell","c","content","isSplish","cells","undefined","isEdtr","plugin","renderMarkdown","input","html","converter","makeHtml","replace","markdownToSlate","markdown","name","Text","version","state","importFromHtml","createPlugins","normalized","elements","split","map","s","trim","filter","length","elementIDMatch","exec","i","parseInt","createPluginCell","elem","Table","src","Spoiler","title","type","id","v4","rows","Blockquote","child","Injection","description","Geogebra","Image","href","language","codeRegEx","RegExp","spoilerRegEx","injectionRegEx","geogebraInjectionRegEx","imagesRegEx","linkedImagesRegEx","tableRegEx","blockquoteRegEx","extractCode","normalizedObj","extract","match","extractSpoilers","normalizeMarkdown","extractTable","extractInjections","extractGeogebra","extractLinkedImages","extractImages","extractBlockquote","regex","createElement","splitMarkdown","isLeaf","raw","splitCell","size","splitRow","row","getCellsFromRow","Math","floor","col","transform","normalize","value","document","normalizeNode","node","isBlock","nodes","some","isInline","R","unwrapChildBlocks","isDocument","result","nodesToInspect","inlineNodes","tailNodes","push","slice","object","createHeadingNode","level","linkNode","orderedListNode","unorderedListNode","listItemNode","listItemChildNode","paragraphNode","strongMark","emphasizeMark","katexBlockNode","katexInlineNode","convertOldSlate","serializer","Html","rules","headingSerializer","linkSerializer","listSerializer","paragraphSerializer","richTextSerializer","katexSerializer","defaultBlock","parseHtml","parseFragment","htmlToSlate","serialize","Value","fromJSON","render","deserializer","headingDeserializer","linkDeserializer","listDeserializer","paragraphDeserializer","richTextDeserializer","katexDeserializer","deserialize","el","tagName","toLowerCase","text","nodeName","toJSON","next","childNodes","attr","attrs","find","data","formula","inline","obj","children","block","React","get","mark","convertPlugin","blockquoteState","convertSplishToEdtrIO","imageState","alt","link","openInNewTab","maxWidth","injectionState","spoilerState","textState","editorState","tableState","geogebraState","code","showLineNumbers","convertRow","width","convertCell","plugins","convert","splish","convertLegacyToSplish"],"mappings":"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"}