import { licenses } from './license-data-short';
import { headerData, footerData, landingSubjectsData, secondaryMenus } from './menu-data';
export const instanceData = {
  lang: "ta",
  headerData,
  footerData,
  secondaryMenus,
  licenses,
  strings: {
    header: {
      slogan: "роЕройрпИро╡ро░рпБроХрпНроХрпБроорпН родро┐ро▒роирпНрод роЙро░ро┐роороорпН роЙро│рпНро│ роУро░рпН роЗрогрпИропродрпНродро│роорпН",
      search: "родрпЗроЯрпБроХ",
      login: "роЙро│рпНроирпБро┤рпИ",
      skipLinks: {
        sentence: 'Skip to %content% or %footer%',
        content: "роЙроЯрпНрокрпКро░рпБро│рпН",
        footer: 'footer'
      }
    },
    search: {
      privacy: 'The search is provided by Google. See our %privacypolicy% to find out what information is processed.',
      agree: 'Agree to use search'
    },
    footer: {
      summaryHeading: "роХро▒рпНрокродро▒рпНроХрпБ ро╡ро┐роХрпНроХро┐рокрпАроЯро┐ропро╛ рокрпЛройрпНро▒родрпБ Serlo.org.",
      summaryText: "роиро╛роЩрпНроХро│рпН роХро▓рпНро╡ро┐ропрпИ роЕройрпИро╡ро░рпБроХрпНроХрпБроорпН роЗро▓ро╡роЪрооро╛роХроХрпН роХро┐роЯрпИроХрпНроХроЪрпН роЪрпЖропрпНроп роЕропро░ро╛родрпБ роЙро┤рпИроХрпНроХро┐ро▒рпЛроорпН",
      learnMore: "роорпЗро▓рпБроорпН роЕро▒ро┐роХ",
      participate: "роЪрпЗро░рпБроЩрпНроХро│рпН",
      donate: "родро╛ройроорпН роЪрпЖропрпН",
      toTop: "роорпЗро▓рпН роирпЗро╛роХрпНроХро┐"
    },
    categories: {
      articles: "роХроЯрпНроЯрпБро░рпИроХро│рпН",
      courses: "ро╡роХрпБрокрпНрокрпБрокрпНрокрпБроХро│рпН",
      videos: "роХро╛рогрпКро│ро┐роХро│рпН",
      applets: 'Applets',
      folders: "роХрпЛрокрпНрокрпБро▒рпИроХро│рпН",
      exercises: "рокропро┐ро▒рпНроЪро┐роХро│рпН",
      events: "роиро┐роХро┤рпНро╡рпБроХро│рпН",
      unrevised: 'Unrevised',
      subterms: 'Subterms',
      exercisesContent: 'Exercises Content'
    },
    entities: {
      applet: "роЖрокрпНро▓рпЖроЯрпН",
      article: "роХроЯрпНроЯрпБро░рпИ",
      course: "ро╡роХрпБрокрпНрокрпБ",
      coursePage: "ро╡роХрпБрокрпНрокрпБ-рокроХрпНроХроорпН",
      event: "роиро┐роХро┤рпНро╡рпБ",
      exercise: "рокропро┐ро▒рпНроЪро┐роХро│рпН",
      exerciseGroup: "рокропро┐ро▒рпНроЪро┐ роХрпЛрокрпНрокрпБро▒рпИ",
      topic: "роХрпЛрокрпНрокрпБро▒рпИ",
      page: "рокроХрпНроХроорпН",
      solution: "родрпАро░рпНро╡рпБ",
      taxonomyTerm: 'Taxonomy Term',
      user: "рокропройро░рпН",
      video: "роХро╛рогрпКро│ро┐",
      exerciseFolder: 'Exercise folder',
      comment: "роХро░рпБродрпНродрпБ",
      revision: "роорпАроЯрпНроЯро▓рпН",
      thread: 'Thread',
      threads: 'Threads',
      subject: "рокро╛роЯроорпН",
      userProfile: 'User Profile',
      privacyPolicy: "родройро┐ропрпБро░ро┐роорпИроХрпН роХрпКро│рпНроХрпИ",
      content: "роЙроЯрпНрокрпКро░рпБро│рпН"
    },
    pageTitles: {
      notifications: 'Your Notifications',
      subscriptions: 'Manage Subscriptions',
      revisionHistory: 'Revision History',
      eventLog: 'Event Log',
      unrevisedRevisions: 'Unrevised Revisions',
      userEdits: 'Edits by %user%',
      userEditsMine: 'My Unrevised Revisions',
      editProfile: 'Edit Profile & Settings',
      recycleBin: 'Recycle Bin',
      diagon: 'Diagon Alley',
      discussions: "роХро░рпБродрпНродрпБроХро│рпН",
      manageRoles: 'Manage User Roles'
    },
    roles: {
      donor: 'Donor',
      author: "роОро┤рпБродрпНродро╛ро│ро░рпН",
      reviewer: 'Reviewer'
    },
    share: {
      button: "рокроХро┐ро░рпНроХ",
      title: "рокроХро┐ро░рпН!",
      copyLink: "роЗрогрпИрокрпНрокрпИ роироХро▓рпЖроЯрпБроХрпНроХро╡рпБроорпН",
      copySuccess: 'Link copied!',
      copyFailed: 'Error copying link!',
      close: "роирпЖро░рпБроХрпНроХрооро╛рой",
      pdf: 'Download as PDF',
      pdfNoSolutions: 'PDF without solutions'
    },
    modal: {
      leaveNow: 'Leave now',
      noStay: 'No, I want to stay'
    },
    editOrAdd: {
      button: "родро┐ро░рпБродрпНродроорпН",
      addNewEntities: "рокрпБродро┐роп роЙро│рпНро│роЯроХрпНроХроорпН роЪрпЗро░рпНроХрпНроХро╡рпБроорпН",
      addNewExercises: 'Add new exercises',
      editExercises: 'Edit exercises',
      unrevised: 'Show unrevised revisions',
      inviteModal: {
        title: 'Create with us!',
        text: 'Hello! %break% Great that you want to contribute to this content ЁЯСН %break% Everybody can edit, but you need an account to do so.',
        loginButton: "роЗрокрпНрокрпЛродрпБ роЙро│рпНроирпБро┤рпИроХ",
        registerButton: 'Register new account',
        psText: 'You can find out in what ways you can contribute %link%.',
        psLinkText: "роЗроЩрпНроХрпЗ"
      }
    },
    license: {
      readMore: "родроХро╡ро▓рпН",
      special: 'Different license',
      nonFree: 'Usage of this content might be more restricted than our other content.',
      appliesTo: 'Applies to'
    },
    content: {
      show: "роХро╛роЯрпНроЯрпБ",
      hide: "рооро▒рпИ",
      trashedNotice: "роЗроирпНрод роЙро│рпНро│роЯроХрпНроХроорпН роХрпБрокрпНрокрпИропро╛роХ роХрпБро▒ро┐роХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ.",
      unrevisedNotice: 'This content has no accepted revision yet. Please use the %link% to preview.',
      emptyNotice: 'There is no content here. Please edit or delete.',
      picture: "рокроЯроорпН",
      previewImage: 'Preview Image',
      task: "рокрогро┐"
    },
    consent: {
      title: 'Consent for external Content',
      intro: 'While using this site you may allowed us to load content from external providers. You can read about the details in the %privacypolicy%.',
      revokeTitle: 'Revoke',
      revokeText: 'Here you can revoke your consent. In this case we ask again, before we load content from those providers',
      noConsent: 'not consented',
      revokeConsent: 'Revoke consent'
    },
    embed: {
      text: 'By clicking on image or button above you agree that external content from %provider% will be loaded. Also personal data may be transferred to this service in accordance with our %privacypolicy%.',
      video: 'Play Video from %provider%',
      applet: 'Load Applet from %provider%',
      twingle: 'Load Donation Form',
      audio: 'Play audio from %provider%',
      general: "роЪрпЖропро▓рпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН"
    },
    comments: {
      question: "роЙроЩрпНроХро│рпБроХрпНроХрпБ роХрпЗро│рпНро╡ро┐ роЙро│рпНро│родро╛?",
      questionLink: 'Write it here',
      commentsOne: "роХро░рпБродрпНродрпБ",
      commentsMany: "роХро░рпБродрпНродрпБроХро│рпН",
      submit: "роЗрогрпИроХрпНроХ",
      archiveThread: 'Archive thread',
      restoreThread: 'Restore thread',
      deleteThread: 'Delete thread',
      deleteComment: "роХро░рпБродрпНродрпИ роирпАроХрпНроХро╡рпБроорпН",
      postedOn: 'Posted on',
      placeholder: 'Your question or suggestionтАж',
      placeholderReply: "роЙроЩрпНроХро│рпН рокродро┐ро▓рпН:",
      loading: 'Looking for comments ...',
      error: 'Sorry, comments could not be loaded, please try again later.',
      showMoreReply: 'Show one more reply',
      showMoreReplies: 'Show %number% more replies',
      hideReplies: 'Hide',
      showArchived: 'Show archived %threads%',
      copyLink: 'Copy comment link',
      commentsOverviewExplanation: 'Here you can see all comments that were written to content on %instance%.serlo.org. %break% Answer questions or find content you could improve. %break% The link above the comment brings you to the relevant entity.',
      edit: "родро┐ро░рпБродрпНродрпБ",
      cancelEdit: "ро░родрпНродрпБ роЪрпЖропрпН",
      saveEdit: "роЪрпЗрооро┐"
    },
    revisions: {
      toOverview: 'Back to overview',
      toContent: 'Go to content',
      changes: "рооро╛ро▒рпНро▒роЩрпНроХро│рпН",
      context: 'Context (current version)',
      title: "родро▓рпИрокрпНрокрпБ",
      content: "роЙроЯрпНрокрпКро░рпБро│рпН",
      metaTitle: 'Meta Title',
      metaDescription: 'Meta Description',
      diff: 'Source view',
      sidebyside: 'Side By Side',
      currentVersion: 'Current Version',
      thisVersion: 'This Version',
      currentNotice: 'This is the currently accepted version.',
      rejectedNotice: 'This revision was not accepted.',
      noCurrentNotice: 'There is no accepted revision yet.',
      unknownNotice: 'This revision was accepted once or was never reviewed.',
      by: 'By',
      parentFallbackLink: 'To parent content',
      hasChanges: 'There have been changes in this area',
      positionForGrouped: 'This %exercise% is part of %title%.',
      helpLink: 'Revision Help'
    },
    revisionHistory: {
      changes: "рооро╛ро▒рпНро▒роЩрпНроХро│рпН",
      author: "роОро┤рпБродрпНродро╛ро│ро░рпН",
      date: "родрпЗродро┐",
      edit: "родро┐ро░рпБродрпНродроорпН",
      editLabel: "роЗроирпНрод роХрпБро▒ро┐рокрпНрокро┐роЯрпНроЯ родро┐ро░рпБродрпНродродрпНродро┐ро▓ро┐ро░рпБроирпНродрпБ родро┐ро░рпБродрпНродродрпНродрпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН",
      view: "роХро╛роЯрпНроЯрпБ",
      viewLabel: 'Show this revision',
      status: 'Status'
    },
    unrevisedRevisions: {
      help1: 'All edits by our Authors show up here. %reviewersLink% will check the quality and approve the changes.',
      reviewers: "ро╡ро┐рооро░рпНроЪроХро░рпНроХро│рпН",
      reviewersUrl: 'https://de.serlo.org/community/202923/rollen-der-serlo-community',
      help2: 'Everybody can preview the edits and continue editing. Inside the preview reviewers can accept the edit and also give feedback.',
      help4: 'How to review? See our %guidelineLink%.',
      guideline: 'Guideline for Reviewing',
      guidelineUrl: 'https://docs.google.com/document/d/1p03xx2KJrFw8Mui4-xllvSTHcEPi8G1bdC8rGXcH6f8/',
      subjectLinks: "рокроЯроЩрпНроХро│рпН",
      showMoreEntities: 'Show all in %subject%',
      showMoreRevisions: 'Show %number% moreтАж',
      newLabelText: "рокрпБродро┐роп",
      newLabelNote: 'This is a new entity',
      wipLabelText: 'wip',
      wipLabelNote: 'Marked as work in progress. Do not review yet.',
      newAuthorText: "рокрпБродро┐роп роОро┤рпБродрпНродро╛ро│ро░рпН",
      newAuthorNote: 'This is one of the first edits of this author, maybe prioritise this.',
      noUnrevisedRevisions: 'No unrevised revisions, all done! ЁЯОЙ',
      importedContentText: 'imported',
      importedContentNote: 'This revision includes imported content',
      importedContentIdentifier: 'Content imported from'
    },
    errors: {
      title: 'ЁЯШм Websites make mistakes sometimesтАж',
      defaultMessage: 'So sorry, we ran into a problem loading this content.',
      temporary: 'The good news? The problem seems to be temporary, so please try again later.',
      permanent: 'We will see what we can do about thatтАж ',
      typeNotSupported: 'Please try reloading this page.',
      refreshNow: 'Refresh now',
      backToPrevious: 'Back to previous page',
      backToHome: 'To our home page',
      deletedComment: {
        title: 'Whoops, this is not here anymore',
        text: 'Sorry, this %type% is no longer online.%break% But it was deleted for a reason and was probably not worth your time anyway ЁЯТЪ'
      }
    },
    print: {
      preparingNotice: 'Preparing print!',
      warning: 'IMPORTANT: To make sure all images and formulas print, please scroll down to the end of the page once BEFORE you open this dialog. Thank you!'
    },
    profiles: {
      aboutMe: 'About me',
      recentActivities: "роЪроорпАрокродрпНродро┐роп роЪрпЖропрпНродро╡рпИ",
      showAllActivities: 'Show all activities',
      noActivities: 'No activities so far.',
      lastLogin: "роХроЯрпИроЪро┐ роЙро│рпНроирпБро┤рпИро╡рпБ",
      yearsWithSerlo: 'Years with Serlo!',
      yearWithSerlo: 'Year with Serlo!',
      roles: "роЪрпЖропро▓рпНрокроЩрпНроХрпБ",
      instanceRoles: 'Roles on %lang%.serlo.org:',
      otherRoles: 'Other roles:',
      directMessage: 'Direct message',
      goToChat: 'Go to Chat',
      registerChat: 'Register for Chat',
      inviteToChat: 'Invite to chat',
      inviteModal: {
        part1: '%username% is not yet active in our community chat at %chatLink%.',
        part2: 'You can invite %username% to the chat to send direct messages.',
        messagePlaceholder: 'Optional: Personal message',
        button: 'Send invitation',
        success: 'тЬи Successfully invited!'
      },
      activityGraph: {
        edits: "роХрпИропро╛ро│рпБродро▓рпН",
        comments: "роХро░рпБродрпНродрпБроХро│рпН",
        reviews: "роорпАро│ро╛ропрпНро╡рпБ",
        taxonomy: "ро╡роХрпИрокрпНрокро╛роЯрпБ",
        legendary: 'ЁЯТЩ Just wow! ЁЯТЩ',
        untilNextLevel: '%amount% more to complete this circle ЁЯОЙ'
      },
      editMotivation: 'Edit motivation',
      addMotivation: 'Add motivation',
      lockedDescriptionTitle: 'Your description currently hidden from the public.',
      lockedDescriptionText: 'After your first contributions it will become visible to everybody.'
    },
    notices: {
      welcome: 'ЁЯСЛ Welcome %username%!',
      bye: "ЁЯСЛ ро╡ро┐ро░рпИро╡ро┐ро▓рпН роЪроирпНродро┐рокрпНрокрпЛроорпН!",
      alreadyLoggedIn: "ЁЯСЛ роорпАрогрпНроЯрпБроорпН ро╡ро░рпБроХ",
      warningLoggedOut: 'тЪая╕П You were logged out. Please login again and then use "Load stored edits" to restore your current changes.',
      revisionSaved: 'Revision is saved and will be reviewed soon ЁЯСН',
      revisionAccepted: 'Revision was successfully accepted тЬЕ',
      revisionRejected: 'Revision was successfully rejected тЭО',
      revisionSavedAccepted: 'Revision was successfully saved and accepted тЬЕ'
    },
    loading: {
      oneMomentPlease: 'One moment pleaseтАж',
      isLoading: 'Content is loadingтАж',
      unknownProblem: 'Sorry, there was a problem loading the content, please try again later.'
    },
    auth: {
      pleaseLogInLink: "роирпАроЩрпНроХро│рпН роЙро│рпНроирпБро┤рпИроп ро╡рпЗрогрпНроЯрпБроорпН!",
      pleaseLogInText: 'to use this feature.',
      register: {
        registerTitle: 'Register your Serlo Account',
        passwordRequirements: 'At least 8 characters, longer is better.',
        registerIntro: 'You do not need an account for studying on serlo.org. %break% If you want to comment, or work on content you came to the right place',
        newsletterSubscription: 'Receive concise updates on our current activities in our newsletter. We use your information for sending purposes and for personal greetings. Look forward to relevant information and our annual fundraising campaign once a year. (optional)'
      },
      recoverTitle: 'Recover your account',
      recoveryInstructions: 'Insert and submit your email address. %break% We will then send you an email with a reset link.',
      verify: {
        title: 'Verify your email',
        instructions: 'Insert and submit your email address to verify it.',
        alreadyDone: 'You are logged in, so you have already verified your emailЁЯШК.'
      },
      settings: {
        title: "роЙроЩрпНроХро│рпН роХроЯро╡рпБроЪрпНроЪрпКро▓рпНро▓рпИ рооро╛ро▒рпНро▒",
        instruction: 'Insert your new password.'
      },
      loggingOut: 'Logging you out тАж',
      login: {
        confirmAction: 'Confirm Action',
        signIn: 'Sign in to your Account',
        logOut: "ро╡рпЖро│ро┐ропрпЗро▒рпБ",
        newHere: "роирпАроЩрпНроХро│рпН роЗроЩрпНроХрпБ рокрпБродро┐ропро╡ро░ро╛?",
        registerNewAccount: 'Register new account',
        forgotPassword: 'Did you %forgotLinkText%?',
        forgotLinkText: 'forget your password',
        validSessionDetected: 'Hey, you are already logged in in another tab. Reload the page to see it!'
      },
      fields: {
        identifier: 'Username or Email address',
        username: "рокропройро░рпНрокрпЖропро░рпН",
        password: "роХроЯро╡рпБроЪрпНроЪрпКро▓рпН",
        email: 'Email',
        interest: "I'm here as..."
      },
      interests: {
        pleaseChoose: 'please choose',
        parent: "рокрпЖро▒рпНро▒рпЛро░рпН",
        teacher: "роЖроЪро┐ро░ро┐ропро░рпНроХро│рпН",
        pupil: "рооро╛рогро╡ро░рпНроХро│рпН",
        student: "рокро▓рпНроХро▓рпИроХрпНроХро┤роХ рооро╛рогро╡ро░рпН",
        other: "ро╡рпЗро▒рпБ"
      },
      messages: {
        code1010003: 'Please confirm this action by verifying that it is you.',
        code1010001: 'Sign in',
        code1010002: 'Sign in via тАЮMein BildungsraumтАЬ',
        code1010013: 'Continue with SSO',
        code1040001: 'Register',
        code1040002: 'Register via тАЮMein BildungsraumтАЬ',
        code1040003: 'Continue',
        code1050001: 'Your changes have been saved! ЁЯОЙ',
        code1060001: 'You successfully recovered your account. Please change your password in the next minutes.',
        code1060002: 'An email containing a recovery link has been sent to the email address you provided. %break% Check your mailbox and click on the provided link it contains.',
        code1070003: "роЪрпЗрооро┐",
        code1070005: "роЗрогрпИроХрпНроХ",
        code1080001: 'An email containing a verification link has been sent to the email address you provided.',
        code1080002: 'You have successfully verified your email address.',
        code4000001: '%reason%',
        code4000002: '%field% is missing.',
        // Should map to usernameInvalid
        code4000004: '%reason%',
        code4000005: '%reason%',
        code4000006: 'The username, email address or password was incorrect. Please check for spelling mistakes.',
        code4000007: 'An account with the same email or username exists already.',
        code4000008: 'The provided authentication code is invalid, please try again.',
        code4000010: 'Have you already verified your email address?.%break% %verificationLinkText%',
        code4060004: 'The recovery link is not valid or has already been used. Please try requesting an email again',
        code4070001: 'The verification link is not valid or has already been used. Please try requesting an email again.',
        code4070005: 'Sorry, this verification link is not valid any more. Please try requesting an email again.'
      },
      usernameInvalid: 'Your username may only contain letters, digits, underscores (_) and hyphens (-).',
      usernameTooLong: "Sorry, this username is too long, make sure it's 32 characters or less",
      passwordTooShort: 'Sorry, this password is too short. Please choose one that is at least 8 characters long.',
      passwordTooLong: 'Sorry, this password is too long. Please choose one that has a maximum of 72 characters.',
      passwordTooSimilar: 'Sorry, this password is too similar to your email or username.',
      emailInvalid: 'Sorry, this is not a valid email address. Check for typos.',
      registrationCheckboxAgreement: 'I agree to the %privacypolicy% and %terms%. I may receive email notifications from Serlo and can opt out at any time.',
      consentNeededBeforeProceeding: 'We need your consent before proceeding.',
      terms: 'Terms',
      signUp: 'Register',
      verificationProblem: 'In case you did not get it',
      verificationLinkText: 'Click here to request the verification email again.',
      badRole: 'You are only allowed to log in through VIDIS if you are a teacher.',
      somethingWrong: 'Sorry, something went wrong!'
    },
    keys: {
      ctrl: 'ctrl',
      return: 'return'
    },
    eventLog: {
      currentEvents: 'Current events',
      oldestEvents: '%amount% oldest events',
      globalDescription: 'All events that happen somewhere on %lang%.serlo.org'
    },
    events: {
      entityInParentPreposition: 'in',
      commentInParentPreposition: 'on',
      setThreadStateArchived: '%actor% archived %thread%.',
      setThreadStateUnarchived: '%actor% restored %thread%.',
      createComment: '%actor% commented in %thread%: %comment%.',
      createThread: '%actor% started %thread% on %object%.',
      createEntity: '%actor% created %object%.',
      setLicense: '%actor% changed the license of %repository%.',
      createEntityLink: '%actor% associated %child% with %parent%.',
      removeEntityLink: '%actor% dissociated %child% from %parent%.',
      createEntityRevision: '%actor% created %revision% of %entity%.',
      checkoutRevision: '%actor% checked out %revision% in %repository%.',
      rejectRevision: '%actor% did not accept %revision% in %repository%.',
      createTaxonomyLink: '%actor% added %child% to %parent%.',
      removeTaxonomyLink: '%actor% removed %child% from %parent%.',
      createTaxonomyTerm: '%actor% created %term%.',
      setTaxonomyTerm: '%actor% updated %term%.',
      setTaxonomyParentDeleted: '%actor% removed the parent of %child%.',
      setTaxonomyParentChangedFrom: '%actor% changed parent of %child% from %previousparent% to %parent%.',
      setTaxonomyParentChanged: '%actor% changed parent of %child% to %parent%.',
      setUuidStateTrashed: '%actor% trashed %object%.',
      setUuidStateRestored: '%actor% restored %object%.',
      inviteToChat: '%actor% invited you to the Chat: %comment% Go to %chatLink% to chat with %actor% and others.',
      entityPlaceholderFallback: "роЙроЯрпНрокрпКро░рпБро│рпН"
    },
    actions: {
      loadMore: 'Load more'
    },
    bin: {
      title: "родро▓рпИрокрпНрокрпБ",
      trashed: 'TrashedтАж'
    }
  }
};
export const instanceLandingData = {
  lang: "ta",
  subjectsData: landingSubjectsData,
  strings: {
    vision: "роиро╛роорпН роЪроорооро╛рой роХро▓рпНро╡ро┐ ро╡ро╛ропрпНрокрпНрокрпБроХро│рпИ роирпЛроХрпНроХро┐ роЗрогрпИроирпНродрпБ рокрогро┐рокрпБро░ро┐ропрпБроорпН роТро░рпБ роХрпБро┤рпБ. роЗроирпНрод роЗрогрпИропродрпНродро│родрпНродро┐ро▓рпН роОрогрпНрогро▒рпНро▒ ро╡ро┐ро╡ро░роХрпН роХроЯрпНроЯрпБро░рпИроХро│рпН, рокропро┐ро▒рпНроЪро┐роХро│рпН рооро▒рпНро▒рпБроорпН роТро▓ро┐рокрпН рокрпЗро┤рпИроХро│рпН роЕройрпИродрпНродрпБрокрпН рокро╛роЯроЩрпНроХро│рпБроХрпНроХрпБроорпН ро╡ро┤роЩрпНроХрокрпНрокроЯрпНроЯрпБро╡ро░рпБроХро┐ройрпНро▒рой. роЗро╡рпИ роЕройрпИродрпНродрпБроорпН роЗро▓ро╡роЪрооро╛роХ роЙро▓роХроорпН роорпБро┤рпБро╡родрпБроорпН роЙро│рпНро│ рооро╛рогро╡ро░рпНроХро│рпБроХрпНроХро╛роХ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯрпБро╡ро░рпБроХро┐ройрпНро▒рой. роЗройро┐ ро╡ро░рпБроорпН роХро╛ро▓роЩрпНроХро│ро┐ро▓рпН, родрооро┐ро┤рпНроорпКро┤ро┐ропро┐ро▓рпБроорпН роЗро╡рпНро╡ро╛ро▒ро╛рой роЗро▓ро╡роЪрокрпН рокро╛роЯродрпНродро┐роЯрпНроЯроЩрпНроХро│рпИ роЙро░рпБро╡ро╛роХрпНроХ роирпАроЩрпНроХро│рпБроорпН роОроорпНроорпБроЯройрпН роЗрогрпИроирпНродрпБ рокрогро┐ропро╛ро▒рпНро▒ро▓ро╛роорпН.",
    learnMore: "роорпЗро▓рпБроорпН роЕро▒ро┐роХ",
    democraticallyStructured: "роЬройроиро╛ропроХ ро░рпАродро┐ропро╛роХ",
    nonProfit: "роЗро▓ро╛рок роирпЛроХрпНроХро▒рпНро▒родрпБ",
    transparent: "ро╡рпЖро│ро┐рокрпНрокроЯрпИродрпНродройрпНроорпИ",
    openlyLicensed: "родро┐ро▒роирпНрод роЙро░ро┐роороорпН",
    adFree: "ро╡ро┐ро│роорпНрокро░рооро┐ройрпНро▒ро┐",
    freeOfCharge: "роЗро▓ро╡роЪроорпН",
    wikiTitle: "Serlo роХро▒рпНрокродро▒рпНроХрпБ ро╡ро┐роХрпНроХро┐рокрпАроЯро┐ропро╛ рокрпЛройрпНро▒родрпБ",
    wikiText: "Serlo.org ро╡ро┐роХрпНроХро┐рокрпАроЯро┐ропро╛рокрпЛро▓ родро┐ро▒роирпНрод роЙро░ро┐роороорпН роХрпКрогрпНроЯ роУро░рпН роЗрогрпИропродрпНродро│роорпН. роЗродрпБ роОроорпН роОро┤рпБродрпНродро╛ро│ро░рпН роХрпБро┤рпБро╡ро╛ро▓рпН роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпБроХро┐ройрпНро▒родрпБ.",
    movementTitle: "роирпАроЩрпНроХро│рпБроорпН роЗродро┐ро▓рпН рокрогрпНрогро┐ропро╛ро▒рпНро▒ро▓ро╛роорпН",
    callForAuthors: "роЖроЪро┐ро░ро┐ропро░рпНроХро│рпБроорпН роЖро░рпНро╡роорпБро│рпНро│ роОро┤рпБродрпНродро╛ро│ро░рпНроХро│рпБроорпН рокро╛роЯроЩрпНроХро│рпИ роЙро░рпБро╡ро╛роХрпНроХ рокро▓ ро╡ро┤ро┐роХро│ро┐ро▓рпН роЙродро╡ро▓ро╛роорпН. рокрпБродрпБрокрпН рокропро┐ро▒рпНроЪро┐роХро│рпИ роЙро░рпБро╡ро╛роХрпНроХрпБро╡родро▒рпНроХрпБроорпН роЗроирпНродродрпН родро│родрпНродро┐ройрпН роЪро┐ро▓ роЙро│рпНро│роЯроХрпНроХроЩрпНроХро│рпИ роЗройрпНройрпБроорпН роорпЗроорпНрокроЯрпБродрпНродрпБро╡родро▒рпНроХрпБроорпН роирпАроЩрпНроХро│рпН роЙродро╡ро▓ро╛роорпН. роЕродро▒рпНроХрпБ роХрпАро┤рпБро│рпНро│ роЗрогрпИропродрпНродро┐ро▒рпНроХрпБроЪрпН роЪрпЖро▓рпНро▓ро╡рпБроорпН.",
    communityLink: "роЖроЪро┐ро░ро┐ропро░рпНроХро│рпБроХрпНроХро╛рой рокроХрпНроХродрпНродрпИ  рокро╛ро░рпНро╡рпИропро┐роЯрпБроЩрпНроХро│рпН",
    callForOther: "роиро╛роЩрпНроХро│рпН рокро▓ ро╡роХрпИропро╛рой ро╡рпЗро▓рпИро╡ро╛ропрпНрокрпНрокрпБроХро│рпИропрпБроорпН рокрпКродрпБроЪрпНроЪрпЗро╡рпИропро╛роХрокрпН рокрогро┐ропро╛ро▒рпНро▒рпБроорпН ро╡ро╛ропрпНрокрпНрокрпБроХро│рпИропрпБроорпН ро╡ро┤роЩрпНроХрпБроХро┐ройрпНро▒рпЛроорпН. роЗроирпНрод роЗрогрпИропродрпНродро│родро┐ро▒рпНроХрпБ роорпКро┤ро┐рокрпЖропро░рпНрокрпНрокро╛ро│ро░рпНроХро│рпН, ро╡роЯро┐ро╡роорпИрокрпНрокро╛ро│ро░рпНроХро│рпН, родрпКро▓рпИродрпНродрпКроЯро░рпНрокро╛ро│ро░рпНроХро│рпН рокрпЛройрпНро▒ родрпБро▒рпИ роЪро╛ро░рпНроирпНродро╡ро░рпНроХро│рпИ роиро╛роЩрпНроХро│рпН родрпЗроЯро┐ роиро┐ро▒рпНроХро┐ройрпНро▒рпЛроорпН. роЗрогрпИроирпНродрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН.",
    getInvolved: "рокроЩрпНроХрпЗро▒рпНроХро╡рпБроорпН!"
  }
};
export const serverSideStrings = {
  title: "Serlo роЙроЯройрпН роХро▒рпНро▒рпБроХрпНроХрпКро│рпНро│рпБроЩрпНроХро│рпН!",
  topicTitleAffix: 'Basics & Exercises'
};
export const loggedInData = {
  authMenu: [{
    url: '/user/notifications',
    title: "роЕро▒ро┐ро╡ро┐рокрпНрокрпБроХро│рпН",
    icon: 'notifications'
  }, {
    url: '',
    title: "рокропройро░рпН",
    icon: 'user',
    children: [{
      url: '/user/me',
      title: 'Own profile'
    }, {
      url: '/event/history/user/me',
      title: 'My Edits'
    }, {
      url: '/subscriptions/manage',
      title: "роЪроирпНродро╛роХрпНроХро│рпН"
    }, {
      url: '/auth/settings',
      title: "роХроЯро╡рпБроЪрпНроЪрпКро▓рпНро▓рпИ рооро╛ро▒рпНро▒рпБ"
    }, {
      url: '/user/settings',
      title: "роЕроорпИрокрпНрокрпБроХро│рпН"
    }, {
      url: '/auth/logout',
      title: "ро╡рпЖро│ро┐ропрпЗро▒рпБ"
    }]
  }],
  strings: {
    tools: 'Other Tools',
    authorMenu: {
      log: "рокродро┐ро╡рпБ",
      settings: "роЕроорпИрокрпНрокрпБроХро│рпН",
      moveOrCopyItems: 'Move or copy items',
      addGroupedTextExercise: 'Add grouped-text-exercise',
      changeLicense: 'Change License',
      subscribe: "роЪроирпНродро╛",
      subscribeNotifications: 'Receive notifications',
      subscribeNotificationsAndMail: 'Receive notifications and emails',
      unsubscribeNotifications: "роЪроирпНродро╛ро╡рпИ роиро┐ро▒рпБродрпНродрпБродро▓рпН",
      convert: 'Convert (beta)',
      history: "ро╡ро░ро▓ро╛ро▒рпБ",
      editAssignments: "родро▓рпИрокрпНрокрпБ рооро▒рпНро▒рпБроорпН рокро╛роЯродрпНродро┐роЯрпНроЯ рокрогро┐роХро│рпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН.",
      moveToTrash: "роХрпБрокрпНрокрпИроХрпНроХрпБ роироХро░рпНродрпНродро╡рпБроорпН",
      confirmTrash: 'Are you sure you want to delete this content?',
      restoreContent: 'Restore from trash',
      sortCoursePages: 'Sort course pages',
      edit: "родро┐ро░рпБродрпНродроорпН",
      editTax: 'Edit Title & Text',
      unrevisedEdit: 'Show unrevised revisions',
      sortEntities: 'Sort content',
      newEntity: 'New Entity',
      editProfile: "роЪрпБропро╡ро┐ро╡ро░ родро┐ро░рпБродрпНродроорпН",
      directLink: 'Direct link to this content',
      analyticsLink: 'See analytics data'
    },
    notifications: {
      hide: 'Deactivate new notifications for this content.',
      setToRead: 'Set notification to read.',
      setAllToRead: 'Set all visible to read',
      showNew: 'New',
      showRead: 'Read'
    },
    subscriptions: {
      mail: "рооро┐ройрпНройроЮрпНроЪро▓рпН",
      subscription: "роЪроирпНродро╛",
      noMails: 'deactivate',
      getMails: "роЪрпЖропро▓рпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН",
      noNotifications: 'cancel',
      loadedSentence: 'Loaded %loadedCount% of %totalCount% entries.',
      loadMoreLink: "роорпЗро▓рпБроорпН роПро▒рпНро▒рпБ"
    },
    revisions: {
      checkout: {
        action: "роПро▒рпНроХро┐ро▒рпЗройрпН",
        title: "родро┐ро░рпБродрпНродроорпН роПро▒рпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ",
        explanation: 'Please give the author some feedback.'
      },
      reject: {
        action: "рооро▒рпБроХрпНроХро┐ро▒рпЗройрпН",
        title: 'Reject Revision',
        explanation: 'Please tell the author why you will not accept the submission.'
      },
      confirm: "роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро╡рпБроорпН",
      unrevisedTaxNote: 'New content, not accepted yet'
    },
    mutations: {
      success: {
        trash: 'Successfully trashed ЁЯЧС',
        restore: 'Successfully restored тЩ╗я╕П',
        accept: 'Edit was accepted тЬЕ',
        reject: 'Edit not rejected тЭМ',
        save: 'Edit successfully saved тЬЕ',
        updated: 'Successfully updated тЬЕ',
        generic: 'Success ЁЯОЙ',
        saveNeedsReview: 'Thank you for your edit ЁЯОЙ The reviewers will check it soon and then it will appear on the site.'
      },
      errors: {
        UNAUTHENTICATED: 'You have to log in to use this function!',
        FORBIDDEN: 'Sorry, you are not allowed to do that!',
        INVALID_TOKEN: '',
        BAD_USER_INPUT: 'Sorry, you are trying something that is not supportedтАж',
        UNKNOWN: 'An unknown errorтАж',
        valueMissing: 'Please fill all required fields'
      }
    },
    profileSettings: {
      editAbout: 'Your description',
      showInstructions: 'Show instructions',
      editImage: {
        header: 'Profile picture',
        buttonText: 'How to edit your profile picture',
        description: 'Currently we use the images from %chatLink% as profile pictures. In order to change your picture, do the following:',
        steps: {
          goToChat: 'Go to %chatLink%.',
          signIn: 'Sign in.',
          goToMyAccount: 'Go in the user menu to %myAccountLink%.',
          myAccount: 'My Account',
          uploadPicture: 'Upload a new picture (make sure it is square) and click "Save changes".',
          refreshPage: 'Come back here and refresh the image using %refreshLink%.',
          refreshLink: 'this link'
        }
      },
      motivation: {
        header: 'Motivation',
        buttonText: 'How to edit your motivation',
        intro: 'Motivations are a new feature we test at the moment. To edit your motivation you have to fill out a simple form.',
        privacy: 'The form and data storage is offered by Google and personal data may be transferred to this service when using this feature.',
        toForm: 'Motivation Form'
      },
      delete: {
        heading: 'How to delete your account',
        text: 'If you want to delete your account, please write us at %mailLink%.%break% Make sure to use your registered email address and %subjectLine% as subject line.',
        deleteAccount: 'Delete Account'
      }
    },
    backend: {
      pages: 'Static Pages',
      authorization: "роЕроЩрпНроХрпАроХро░ро┐родрпНродро▓рпН",
      navigation: "ро╡ро┤ро┐роЪрпЖро▓рпБродрпНродро▓рпН",
      recycleBin: 'Recycle Bin'
    },
    pages: {
      newPage: 'Add new Page',
      deletedPages: 'Deleted Pages'
    },
    taxonomyTermTools: {
      copyMove: {
        title: 'Move / Copy Entities in Taxonomy',
        select: 'Select entities to move or copy:',
        target: 'Target term:',
        link: 'Link',
        moveButtonText: 'Move to %type%',
        copyButtonText: 'Copy to %type%',
        moveSuccess: 'Sucessfully moved',
        copySuccess: 'Sucessfully copied',
        exerciseFolderNotice: 'Copying or moving the type %exerciseFolder% is not supported at the moment. %break% Please create a new folder and move the contents instead.'
      },
      deleteAdd: {
        confirmDelete: 'Are you sure you want to remove this assignment?',
        addSuccess: 'Sucessfully assigned, reloading тАж',
        addNewTitle: 'Add new assignment',
        addButtonText: 'Assign'
      },
      sort: {
        title: 'Sort Entities',
        saveButtonText: 'Save order'
      }
    },
    roles: {
      addButton: 'Add as %role%'
    }
  }
};
export const kratosMailStrings = {
  recovery: {
    valid: {
      subject: 'ЁЯСЙ Access to your Serlo account',
      'body.plaintext': `ЁЯСЛ Hi {{ .Identity.traits.username }},
Are you trying to get access to your account at serlo.org? If not please just ignore this mail.

To reset your password please open the following link in your browser:
{{ .RecoveryURL }}

Best of luck from your Serlo team`,
      body: `<p>ЁЯСЛ Hi <b>{{ .Identity.traits.username }}</b>,</p>
<p>Are you trying to get access to your account at serlo.org? If not please just ignore this mail.</p>

<p>To reset your password please open the following link in your browser:
<a href="{{ .RecoveryURL }}">{{ .RecoveryURL }}</a><br/><br/>Best of luck from your Serlo team</p>`
    },
    invalid: {
      subject: 'ЁЯСЙ Account access attempted',
      'body.plaintext': `ЁЯСЛ Hi there!

You (or someone else) entered this email address when trying to recover access to an account at serlo.org.

But this email address is not linked to a user in our website and therefore the attempt failed.

If it was you, check if you signed up using a different address.

Otherwise please just ignore this email.

тЬМя╕П`,
      body: `<p>ЁЯСЛ Hi there!</p>
<p>You (or someone else) entered this email address when trying to recover access to an account at <a href="https://serlo.org">serlo.org</a>. </p>
<p>But this email address is not linked to a user in our website and therefore the attempt failed.</p>
<p>If it was you, check if you signed up using a different address.</p>
<p>Otherwise, please just ignore this email.</p>
<p>тЬМя╕П</p>`
    }
  },
  verification: {
    valid: {
      subject: 'ЁЯСЛ Please verify your email address',
      'body.plaintext': `Hi {{ .Identity.traits.username }},

      We are excited to have you at serlo.org ЁЯОЙ

      Please verify your brand new account by clicking the following link:

{{ .VerificationURL }}

Your Community-Support ЁЯТЪ`,
      body: `<p>Hi <b>{{ .Identity.traits.username }}</b>,</p>
<p>We are excited to have you at serlo.org ЁЯОЙ</p>
<p>Please verify your account by clicking the following link:<br/>
<a style="color: #007ec1 !important;" href="{{ .VerificationURL }}">{{ .VerificationURL }}</a>
</p><p>Your Community-Support ЁЯТЪ</p>
      `
    },
    invalid: {
      subject: `ЁЯСЛ Someone tried to verify this email address`,
      'body.plaintext': `ЁЯСЛ Hi there,

Someone asked to verify this email address, but we were unable to find an account at serlo.org for this address.

If it was you, check if you registered using a different address.

Otherwise, please just ignore this email.

тЬМя╕П`,
      body: `<p>ЁЯСЛ Hi there,</p>
<p>Someone asked to verify this email address, but we were unable to find an account at <a href="https://serlo.org">serlo.org</a> for this address.</p>
<p>If this was you, check if you registered using a different address.</p>
<p>Otherwise, please just ignore this email.</p>
<p>тЬМя╕П</p>`
    }
  }
};