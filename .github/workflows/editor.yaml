name: editor

on:
  push:
    branches:
      - staging

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - run: yarn

      - name: Build editor package
        run: yarn editor:build

      - name: Get current version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./packages/editor/package.json').version")
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if current version is already published
        id: check_published
        run: |
          if npm view @serlo/editor@$CURRENT_VERSION > /dev/null 2>&1; then
            echo "already_published=true" >> $GITHUB_OUTPUT
          else
            echo "already_published=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.check_published.outputs.already_published == 'false'
        run: yarn editor:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create and push Git tag
        if: steps.check_published.outputs.already_published == 'false'
        run: |
          git tag v$CURRENT_VERSION
          git push origin v$CURRENT_VERSION

      - name: Extract changelog for current version
        id: extract_changelog
        run: |
          CHANGELOG=$(awk "/## Changelog for version $CURRENT_VERSION/,/^##/" packages/editor/CHANGELOG.md | sed '$d')
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: steps.check_published.outputs.already_published == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name": "v${{ steps.get_version.outputs.version }}",
              "name": "Serlo Editor - v${{ steps.get_version.outputs.version }}",
              "body": ${{ toJson(env.RELEASE_NOTES) }}
            }'
